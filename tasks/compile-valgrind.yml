---

# - name: VALGRIND | clean tmp dir
#   file:
#     state: absent
#     path: "{{ tmp }}"

# - name: VALGRIND | clean build dir
#   file:
#     state: absent
#     path: "{{ build }}"

- name: VALGRIND | check if VALGRIND is already installed
  stat:
    path: "{{ valgrind_install_dir }}"
  register: valgrind_exists

- name: VALGRIND | Get sources
  become: true
  get_url: url={{valgrind_url}} dest={{valgrind_tmp}} timeout=180 force=no
  when: not valgrind_exists.stat.exists
  register: valgrind_downloaded

- name: VALGRIND | Extract sources
  become: true
  unarchive: src={{valgrind_tmp}}
             dest="/tmp"
             creates={{valgrind_build_dir}}
             remote_src=yes
  when: valgrind_downloaded.changed

- name: VALGRIND | Make build folder
  become: true
  file: path={{valgrind_build_dir}} state=directory
  when: valgrind_downloaded.changed

- name: VALGRIND | Configure
  become: true
  shell: chdir={{valgrind_build_dir}} {{valgrind_build_dir}}/configure \
    --prefix={{valgrind_install_dir}} \
  when: valgrind_downloaded.changed

- name: VALGRIND | Make
  become: true
  shell: chdir={{valgrind_build_dir}} make
  when: valgrind_downloaded.changed

- name: VALGRIND | Install
  become: true
  shell: chdir={{valgrind_build_dir}} make install
  when: valgrind_downloaded.changed
  register: valgrind_install

- name: VALGRIND | cleanup build
  become: true
  file:
    path: "{{ valgrind_build_dir }}"
    state: absent
  when: valgrind_install.changed

- name: VALGRIND | cleanup tmp
  become: true
  file:
    path: "{{ valgrind_tmp }}"
    state: absent
  when: valgrind_install.changed

- name: VALGRIND | cleanup tmp
  become: true
  file:
    path: "{{ valgrind_build_dir }}"
    state: absent
  when: valgrind_install.changed
...
